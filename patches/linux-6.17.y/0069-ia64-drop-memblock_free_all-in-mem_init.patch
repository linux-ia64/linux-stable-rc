From e05a95d4b4c63f713b8c1b78a398d01e16782081 Mon Sep 17 00:00:00 2001
From: Tomas Glozar <tglozar@gmail.com>
Date: Sat, 6 Sep 2025 18:23:32 +0200
Subject: [PATCH 69/90] ia64: drop memblock_free_all() in mem_init()

Since commit 8afa901c147a ("arch, mm: make releasing of memory to page
allocator more explicit"), memblock_free_all() has been moved to
mm_core_init() and made private.

Remove all to memblock_free_all() in ia64 mem_init(), too. Additionally,
re-shuffle Itanium-specific memory initialization so that code that
needs to be executed before memblock_free_all() is in arch_mm_preinit()
instead of mem_init(), which is now called after memblock_free_all().

Signed-off-by: Tomas Glozar <tglozar@gmail.com>
---
 arch/ia64/mm/init.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/arch/ia64/mm/init.c b/arch/ia64/mm/init.c
index b13bfbff9c7f..ca6cd0ae0d5d 100644
--- a/arch/ia64/mm/init.c
+++ b/arch/ia64/mm/init.c
@@ -438,10 +438,8 @@ nolwsys_setup (char *s)
 __setup("nolwsys", nolwsys_setup);
 
 void __init
-mem_init (void)
+arch_mm_preinit (void)
 {
-	int i;
-
 	BUG_ON(PTRS_PER_PGD * sizeof(pgd_t) != PAGE_SIZE);
 	BUG_ON(PTRS_PER_PMD * sizeof(pmd_t) != PAGE_SIZE);
 	BUG_ON(PTRS_PER_PTE * sizeof(pte_t) != PAGE_SIZE);
@@ -465,7 +463,12 @@ mem_init (void)
 #endif
 
 	high_memory = __va(max_low_pfn * PAGE_SIZE);
-	memblock_free_all();
+}
+
+void __init
+mem_init (void)
+{
+	int i;
 
 	/*
 	 * For fsyscall entrypoints with no light-weight handler, use the ordinary
-- 
2.25.1

