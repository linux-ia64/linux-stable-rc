From 9402b810a1a7b59e12fcceb18b2b583cb2441417 Mon Sep 17 00:00:00 2001
From: Johnny Mnemonic <jm@machine-hall.org>
Date: Mon, 23 Dec 2024 13:53:53 +0100
Subject: [PATCH 46/90] Revert "ACPI: processor_perflib: extend X86 dependency"

This reverts commit bf41bb57b2c1d305d594c15bab8d387b1f5b75dc.
---
 drivers/acpi/processor_perflib.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/acpi/processor_perflib.c b/drivers/acpi/processor_perflib.c
index 8972446b7162..16e2cf15aeb5 100644
--- a/drivers/acpi/processor_perflib.c
+++ b/drivers/acpi/processor_perflib.c
@@ -25,6 +25,8 @@
 
 #define ACPI_PROCESSOR_FILE_PERFORMANCE	"performance"
 
+static DEFINE_MUTEX(performance_mutex);
+
 /*
  * _PPC support is implemented as a CPUfreq policy notifier:
  * This means each time a CPUfreq driver registered also with
@@ -219,10 +221,6 @@ void acpi_processor_ppc_exit(struct cpufreq_policy *policy)
 	}
 }
 
-#ifdef CONFIG_X86
-
-static DEFINE_MUTEX(performance_mutex);
-
 static int acpi_processor_get_performance_control(struct acpi_processor *pr)
 {
 	int result = 0;
@@ -281,6 +279,7 @@ static int acpi_processor_get_performance_control(struct acpi_processor *pr)
 	return result;
 }
 
+#ifdef CONFIG_X86
 /*
  * Some AMDs have 50MHz frequency multiples, but only provide 100MHz rounding
  * in their ACPI data. Calculate the real values and fix up the _PSS data.
@@ -311,6 +310,9 @@ static void amd_fixup_frequency(struct acpi_processor_px *px, int i)
 			px->core_frequency = (100 * (fid + 8)) >> did;
 	}
 }
+#else
+static void amd_fixup_frequency(struct acpi_processor_px *px, int i) {};
+#endif
 
 static int acpi_processor_get_performance_states(struct acpi_processor *pr)
 {
@@ -450,11 +452,13 @@ int acpi_processor_get_performance_info(struct acpi_processor *pr)
 	 * the BIOS is older than the CPU and does not know its frequencies
 	 */
  update_bios:
+#ifdef CONFIG_X86
 	if (acpi_has_method(pr->handle, "_PPC")) {
 		if(boot_cpu_has(X86_FEATURE_EST))
 			pr_warn(FW_BUG "BIOS needs update for CPU "
 			       "frequency support\n");
 	}
+#endif
 	return result;
 }
 EXPORT_SYMBOL_GPL(acpi_processor_get_performance_info);
@@ -796,4 +800,3 @@ void acpi_processor_unregister_performance(unsigned int cpu)
 	mutex_unlock(&performance_mutex);
 }
 EXPORT_SYMBOL(acpi_processor_unregister_performance);
-#endif
-- 
2.25.1

