From a342a676081c0b13ccb4fa54b1dfb0a69a5057bf Mon Sep 17 00:00:00 2001
From: Johnny Mnemonic <jm@machine-hall.org>
Date: Sun, 2 Jun 2024 10:05:31 +0200
Subject: [PATCH 27/29] Revert "ACPI/NUMA: Squash
 acpi_numa_memory_affinity_init() into acpi_parse_memory_affinity()"

This reverts commit 57ba79e865e5b50a6ad15a98ea4b2cf808f19c0c.
---
 drivers/acpi/numa/srat.c | 40 +++++++++++++++++++++++-----------------
 1 file changed, 23 insertions(+), 17 deletions(-)

diff --git a/drivers/acpi/numa/srat.c b/drivers/acpi/numa/srat.c
index e3f26e71637a..430ddcfb8312 100644
--- a/drivers/acpi/numa/srat.c
+++ b/drivers/acpi/numa/srat.c
@@ -248,30 +248,22 @@ static int __init acpi_parse_slit(struct acpi_table_header *table)
 	return 0;
 }
 
-static int parsed_numa_memblks __initdata;
-
 static int __init
-acpi_parse_memory_affinity(union acpi_subtable_headers *header,
-			   const unsigned long table_end)
+acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *ma)
 {
-	struct acpi_srat_mem_affinity *ma;
 	u64 start, end;
 	u32 hotpluggable;
 	int node, pxm;
 
-	ma = (struct acpi_srat_mem_affinity *)header;
-
-	acpi_table_print_srat_entry(&header->common);
-
 	if (srat_disabled())
-		return 0;
+		goto out_err;
 	if (ma->header.length < sizeof(struct acpi_srat_mem_affinity)) {
 		pr_err("SRAT: Unexpected header length: %d\n",
 		       ma->header.length);
 		goto out_err_bad_srat;
 	}
 	if ((ma->flags & ACPI_SRAT_MEM_ENABLED) == 0)
-		return 0;
+		goto out_err;
 	hotpluggable = IS_ENABLED(CONFIG_MEMORY_HOTPLUG) &&
 		(ma->flags & ACPI_SRAT_MEM_HOT_PLUGGABLE);
 
@@ -309,15 +301,11 @@ acpi_parse_memory_affinity(union acpi_subtable_headers *header,
 
 	max_possible_pfn = max(max_possible_pfn, PFN_UP(end - 1));
 
-	parsed_numa_memblks++;
-
 	return 0;
-
 out_err_bad_srat:
-	/* Just disable SRAT, but do not fail and ignore errors. */
 	bad_srat();
-
-	return 0;
+out_err:
+	return -EINVAL;
 }
 
 static int __init acpi_parse_cfmws(union acpi_subtable_headers *header,
@@ -450,6 +438,24 @@ acpi_parse_gi_affinity(union acpi_subtable_headers *header,
 }
 #endif /* defined(CONFIG_X86) || defined (CONFIG_ARM64) */
 
+static int __initdata parsed_numa_memblks;
+
+static int __init
+acpi_parse_memory_affinity(union acpi_subtable_headers * header,
+			   const unsigned long end)
+{
+	struct acpi_srat_mem_affinity *memory_affinity;
+
+	memory_affinity = (struct acpi_srat_mem_affinity *)header;
+
+	acpi_table_print_srat_entry(&header->common);
+
+	/* let architecture-dependent part to do it */
+	if (!acpi_numa_memory_affinity_init(memory_affinity))
+		parsed_numa_memblks++;
+	return 0;
+}
+
 static int __init acpi_parse_srat(struct acpi_table_header *table)
 {
 	struct acpi_table_srat *srat = (struct acpi_table_srat *)table;
-- 
2.25.1

