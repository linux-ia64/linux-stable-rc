From 0ee5bb92e5c6fe01dd62272968d5254ffe7ecd0d Mon Sep 17 00:00:00 2001
From: Tomas Glozar <tglozar@gmail.com>
Date: Fri, 27 Oct 2023 13:11:38 +0200
Subject: [PATCH 02/73] Revert "lib/raid6: Drop IA64 support"

This reverts commit b089ea3cc30de85ea7e20aa66500feb4082dfbf7.
---
 include/linux/raid/pq.h | 2 ++
 lib/raid6/Makefile      | 4 ++--
 lib/raid6/algos.c       | 4 ++++
 lib/raid6/int.uc        | 9 +++++++++
 4 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/include/linux/raid/pq.h b/include/linux/raid/pq.h
index 72ff44cca864..7f76d266b348 100644
--- a/include/linux/raid/pq.h
+++ b/include/linux/raid/pq.h
@@ -84,6 +84,8 @@ extern const struct raid6_calls raid6_intx1;
 extern const struct raid6_calls raid6_intx2;
 extern const struct raid6_calls raid6_intx4;
 extern const struct raid6_calls raid6_intx8;
+extern const struct raid6_calls raid6_intx16;
+extern const struct raid6_calls raid6_intx32;
 extern const struct raid6_calls raid6_mmxx1;
 extern const struct raid6_calls raid6_mmxx2;
 extern const struct raid6_calls raid6_sse1x1;
diff --git a/lib/raid6/Makefile b/lib/raid6/Makefile
index 5be0a4e60ab1..8c35ce37f7f2 100644
--- a/lib/raid6/Makefile
+++ b/lib/raid6/Makefile
@@ -2,7 +2,7 @@
 obj-$(CONFIG_RAID6_PQ)	+= raid6_pq.o
 
 raid6_pq-y	+= algos.o recov.o tables.o int1.o int2.o int4.o \
-		   int8.o
+		   int8.o int16.o int32.o
 
 raid6_pq-$(CONFIG_X86) += recov_ssse3.o recov_avx2.o mmx.o sse1.o sse2.o avx2.o avx512.o recov_avx512.o
 raid6_pq-$(CONFIG_ALTIVEC) += altivec1.o altivec2.o altivec4.o altivec8.o \
@@ -37,7 +37,7 @@ endif
 quiet_cmd_unroll = UNROLL  $@
       cmd_unroll = $(AWK) -v N=$* -f $(src)/unroll.awk < $< > $@
 
-targets += int1.c int2.c int4.c int8.c
+targets += int1.c int2.c int4.c int8.c int16.c int32.c
 $(obj)/int%.c: $(src)/int.uc $(src)/unroll.awk FORCE
 	$(call if_changed,unroll)
 
diff --git a/lib/raid6/algos.c b/lib/raid6/algos.c
index 75ce3e134b7c..68038f863514 100644
--- a/lib/raid6/algos.c
+++ b/lib/raid6/algos.c
@@ -82,6 +82,10 @@ const struct raid6_calls * const raid6_algos[] = {
 	&raid6_rvvx2,
 	&raid6_rvvx4,
 	&raid6_rvvx8,
+#endif
+#if defined(__ia64__)
+	&raid6_intx32,
+	&raid6_intx16,
 #endif
 	&raid6_intx8,
 	&raid6_intx4,
diff --git a/lib/raid6/int.uc b/lib/raid6/int.uc
index 1ba56c3fa482..558aeac9342a 100644
--- a/lib/raid6/int.uc
+++ b/lib/raid6/int.uc
@@ -41,6 +41,13 @@ typedef u32 unative_t;
 
 
 
+/*
+ * IA-64 wants insane amounts of unrolling.  On other architectures that
+ * is just a waste of space.
+ */
+#if ($# <= 8) || defined(__ia64__)
+
+
 /*
  * These sub-operations are separate inlines since they can sometimes be
  * specially optimized using architecture-specific hacks.
@@ -145,3 +152,5 @@ const struct raid6_calls raid6_intx$# = {
 	"int" NSTRING "x$#",
 	0
 };
+
+#endif
-- 
2.25.1

