From 5542d246cd3f6f7f3e36ca93c0d991f75bd60321 Mon Sep 17 00:00:00 2001
From: Johnny Mnemonic <jm@machine-hall.org>
Date: Mon, 10 Feb 2025 16:12:32 +0100
Subject: [PATCH 62/70] Revert "scripts: clean up IA-64 code"

This reverts commit 0df8e97085946dd79c06720678a845778b6d6bf8.
---
 scripts/gdb/linux/tasks.py   | 15 ++++++++++++---
 scripts/head-object-list.txt |  1 +
 scripts/kconfig/mconf.c      |  2 +-
 scripts/kconfig/nconf.c      |  2 +-
 scripts/package/kernel.spec  | 13 +++++++++++--
 scripts/package/mkdebian     |  2 +-
 scripts/recordmcount.c       |  1 +
 scripts/recordmcount.pl      |  7 +++++++
 scripts/xz_wrap.sh           |  6 ++++++
 9 files changed, 41 insertions(+), 8 deletions(-)

diff --git a/scripts/gdb/linux/tasks.py b/scripts/gdb/linux/tasks.py
index 62348397c1f5..1577d70b8d42 100644
--- a/scripts/gdb/linux/tasks.py
+++ b/scripts/gdb/linux/tasks.py
@@ -82,12 +82,21 @@ LxPs()
 
 thread_info_type = utils.CachedType("struct thread_info")
 
+ia64_task_size = None
+
 
 def get_thread_info(task):
     thread_info_ptr_type = thread_info_type.get_type().pointer()
-    if task_type.get_type().fields()[0].type == thread_info_type.get_type():
-        return task['thread_info']
-    thread_info = task['stack'].cast(thread_info_ptr_type)
+    if utils.is_target_arch("ia64"):
+        global ia64_task_size
+        if ia64_task_size is None:
+            ia64_task_size = gdb.parse_and_eval("sizeof(struct task_struct)")
+        thread_info_addr = task.address + ia64_task_size
+        thread_info = thread_info_addr.cast(thread_info_ptr_type)
+    else:
+        if task_type.get_type().fields()[0].type == thread_info_type.get_type():
+            return task['thread_info']
+        thread_info = task['stack'].cast(thread_info_ptr_type)
     return thread_info.dereference()
 
 
diff --git a/scripts/head-object-list.txt b/scripts/head-object-list.txt
index 7274dfc65af6..a588c48d48c4 100644
--- a/scripts/head-object-list.txt
+++ b/scripts/head-object-list.txt
@@ -17,6 +17,7 @@ arch/arm/kernel/head-nommu.o
 arch/arm/kernel/head.o
 arch/csky/kernel/head.o
 arch/hexagon/kernel/head.o
+arch/ia64/kernel/head.o
 arch/loongarch/kernel/head.o
 arch/m68k/68000/head.o
 arch/m68k/coldfire/head.o
diff --git a/scripts/kconfig/mconf.c b/scripts/kconfig/mconf.c
index 84ea9215c0a7..25ee330546b2 100644
--- a/scripts/kconfig/mconf.c
+++ b/scripts/kconfig/mconf.c
@@ -250,7 +250,7 @@ search_help[] =
 	"      -> PCI support (PCI [=y])\n"
 	"(1)     -> PCI access mode (<choice> [=y])\n"
 	"  Defined at drivers/pci/Kconfig:47\n"
-	"  Depends on: X86_LOCAL_APIC && X86_IO_APIC\n"
+	"  Depends on: X86_LOCAL_APIC && X86_IO_APIC || IA64\n"
 	"  Selects: LIBCRC32\n"
 	"  Selected by: BAR [=n]\n"
 	"-----------------------------------------------------------------\n"
diff --git a/scripts/kconfig/nconf.c b/scripts/kconfig/nconf.c
index c0b2dabf6c89..3401e5094d30 100644
--- a/scripts/kconfig/nconf.c
+++ b/scripts/kconfig/nconf.c
@@ -219,7 +219,7 @@ search_help[] =
 "Symbol: FOO [ = m]\n"
 "Prompt: Foo bus is used to drive the bar HW\n"
 "Defined at drivers/pci/Kconfig:47\n"
-"Depends on: X86_LOCAL_APIC && X86_IO_APIC\n"
+"Depends on: X86_LOCAL_APIC && X86_IO_APIC || IA64\n"
 "Location:\n"
 "  -> Bus options (PCI, PCMCIA, EISA, ISA)\n"
 "    -> PCI support (PCI [ = y])\n"
diff --git a/scripts/package/kernel.spec b/scripts/package/kernel.spec
index 98f206cb7c60..633a9ffca344 100644
--- a/scripts/package/kernel.spec
+++ b/scripts/package/kernel.spec
@@ -85,6 +85,10 @@ patch -p1 < %{SOURCE2}
 
 %install
 mkdir -p %{buildroot}/lib/modules/%{KERNELRELEASE}
+%ifarch ia64
+mkdir -p %{buildroot}/boot/efi
+ln -s efi/vmlinuz-%{KERNELRELEASE} %{buildroot}/boot/
+%endif
 cp $(%{make} %{makeflags} -s image_name) %{buildroot}/lib/modules/%{KERNELRELEASE}/vmlinuz
 # DEPMOD=true makes depmod no-op. We do not package depmod-generated files.
 %{make} %{makeflags} INSTALL_MOD_PATH=%{buildroot} DEPMOD=true modules_install
@@ -139,9 +143,14 @@ rm -f debugfiles.list debuglinks.list debugsourcefiles.list debugsources.list \
 if [ -x /usr/bin/kernel-install ]; then
 	/usr/bin/kernel-install add %{KERNELRELEASE} /lib/modules/%{KERNELRELEASE}/vmlinuz
 fi
+%ifarch ia64
+boot_subdir="efi/"
+%else
+boot_subdir=""
+%endif
 for file in vmlinuz System.map config; do
-	if ! cmp --silent "/lib/modules/%{KERNELRELEASE}/${file}" "/boot/${file}-%{KERNELRELEASE}"; then
-		cp "/lib/modules/%{KERNELRELEASE}/${file}" "/boot/${file}-%{KERNELRELEASE}"
+	if ! cmp --silent "/lib/modules/%{KERNELRELEASE}/${file}" "/boot/${boot_subdir}${file}-%{KERNELRELEASE}"; then
+		cp "/lib/modules/%{KERNELRELEASE}/${file}" "/boot/${boot_subdir}${file}-%{KERNELRELEASE}"
 	fi
 done
 if [ -d "/lib/modules/%{KERNELRELEASE}/dtb" ] && \
diff --git a/scripts/package/mkdebian b/scripts/package/mkdebian
index d4b007b38a47..dfab328418dc 100755
--- a/scripts/package/mkdebian
+++ b/scripts/package/mkdebian
@@ -26,7 +26,7 @@ set_debarch() {
 
 	# Attempt to find the correct Debian architecture
 	case "$UTS_MACHINE" in
-	i386|alpha|m68k|riscv*)
+	i386|ia64|alpha|m68k|riscv*)
 		debarch="$UTS_MACHINE" ;;
 	x86_64)
 		debarch=amd64 ;;
diff --git a/scripts/recordmcount.c b/scripts/recordmcount.c
index 3e4f54799cc0..40ae6b2c7a6d 100644
--- a/scripts/recordmcount.c
+++ b/scripts/recordmcount.c
@@ -590,6 +590,7 @@ static int do_file(char const *const fname)
 		ideal_nop = ideal_nop4_arm64;
 		is_fake_mcount64 = arm64_is_fake_mcount;
 		break;
+	case EM_IA_64:	reltype = R_IA64_IMM64; break;
 	case EM_MIPS:	/* reltype: e_class    */ break;
 	case EM_LOONGARCH:	/* reltype: e_class    */ break;
 	case EM_PPC:	reltype = R_PPC_ADDR32; break;
diff --git a/scripts/recordmcount.pl b/scripts/recordmcount.pl
index 0871b2e92584..5794b3a43137 100755
--- a/scripts/recordmcount.pl
+++ b/scripts/recordmcount.pl
@@ -275,6 +275,13 @@ if ($arch eq "x86_64") {
     $section_type = '%progbits';
     $mcount_regex = "^\\s*([0-9a-fA-F]+):\\s*R_AARCH64_CALL26\\s+_mcount\$";
     $type = ".quad";
+} elsif ($arch eq "ia64") {
+    $mcount_regex = "^\\s*([0-9a-fA-F]+):.*\\s_mcount\$";
+    $type = "data8";
+
+    if ($is_module eq "0") {
+	$cc .= " -mconstant-gp";
+    }
 } elsif ($arch eq "sparc64") {
     # In the objdump output there are giblets like:
     # 0000000000000000 <igmp_net_exit-0x18>:
diff --git a/scripts/xz_wrap.sh b/scripts/xz_wrap.sh
index f19369687030..242a41de672c 100755
--- a/scripts/xz_wrap.sh
+++ b/scripts/xz_wrap.sh
@@ -13,6 +13,7 @@
 #   arm          2/4    ARM and ARM-Thumb2
 #   arm64         4
 #   csky          2
+#   ia64         16     16 Byte aligned for pb=4
 #   loongarch     4
 #   mips         2/4    MicroMIPS is 2-byte aligned
 #   parisc        4
@@ -71,6 +72,10 @@ case $SRCARCH in
 		ALIGN=2
 		;;
 
+	ia64)
+		ALIGN=16
+		BCJ=--ia64
+
 	loongarch)
 		ALIGN=4
 		;;
@@ -145,6 +150,7 @@ case $ALIGN in
 	1)  LZMA2OPTS= ;;
 	2)  LZMA2OPTS=lp=1 ;;
 	4)  LZMA2OPTS=lp=2,lc=2 ;;
+	16) LZMA2OPTS=pb=4 ;;
 	*)  echo "$0: ALIGN wrong or missing" >&2; exit 1 ;;
 esac
 
-- 
2.25.1

